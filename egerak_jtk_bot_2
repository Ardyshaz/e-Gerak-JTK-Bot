from datetime import datetime
from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler, MessageHandler, filters

# List of employees (you can edit or expand this list)
employees = ['MIZI', 'MEOR', 'YANA', 'SURAYA', 'NIENA', 'AZIE', 'MIRUL', 'YATT', 'NABIL', 'ARDY', 'NIENA', 'ZULIZA']

# Dictionary to store reports
employee_reports = {}

# Function to start the bot and show the name selection buttons
async def start(update: Update, context):
    keyboard = [[InlineKeyboardButton(emp, callback_data=emp)] for emp in employees]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text('Select your name:', reply_markup=reply_markup)

# Callback function when a name is selected
async def button(update: Update, context):
    query = update.callback_query
    await query.answer()
    context.user_data['employee_name'] = query.data
    await query.edit_message_text(text=f"Name selected: {query.data}\nHang kemana hari ini? :")

# Function to receive the custom text message
async def receive_text(update: Update, context):
    employee_name = context.user_data.get('employee_name', 'Unknown')
    daily_text = update.message.text

    # Store the report in the dictionary
    employee_reports[employee_name] = daily_text  # Update or add the report

    await update.message.reply_text(f"Terima kasih {employee_name}, maklumat diterima .")

    # Send the summary after each report submission
    await send_summary(update, context)  # Send summary after each report submission



# Function to send the summary report when all have submitted

# Function to send the summary report after each submission
async def send_summary(update: Update, context):
    # Get the current date in DD-MMM-YYYY format
    current_date = datetime.now().strftime("%d-%b-%Y")  # Format as DD-MMM-YYYY

    summary = f"ðŸ“… *MAKLUMAT KEBERADAAN JTK PTIS LAHAT BAGI TARIKH {current_date}* ðŸ“…\n\n"
    
    # Loop through each employee and display their report or show blank if not submitted
    for employee in employees:
        report = employee_reports.get(employee, "")  # Default to empty string if no report
        summary += f"ðŸ‘¤ *{employee}*: {report}\n\n"  # Add two new lines for spacing

    summary += "Terima kasih atas kerjasama anda. \nData ini akan dimasukkan ke Group Rasmi JTK Uptis Kinta Utara (Keberadaan). Terima kasih. KLIK /start semula untuk submit/update data lain" 
            
    
    await update.message.reply_text(summary, parse_mode='Markdown')  # Enable Markdown formatting



# Main function to handle bot events
def main():
    application = ApplicationBuilder().token('7672291464:AAHAZAPzEhOt0r4qPZ9G6S_Vhf35D031EAU').build()

    application.add_handler(CommandHandler("start", start))  # Start command to show name selection
    application.add_handler(CallbackQueryHandler(button))    # Handle name selection from buttons
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, receive_text))  # Handle custom text input

    application.run_polling()  # Start polling Telegram for updates

if __name__ == '__main__':
    main()



